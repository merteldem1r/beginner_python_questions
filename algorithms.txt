AHSEN YENİSEY ALGORITHMS

Note: To run python code "python -B -m folder_name.file_name"


Sum Of Odd Elements

    Description: Given an array of integers, find the sum of all odd elements in the array.

    Input: An array arr of integers.

    Examples:

        Input: [1, 2, 3, 4, 5]
        Output: 9

    Complexity:

        Time: O(n)
        Space: O(1)



Count Vowels in a String

    Description: Given a string s, count the number of vowels (a, e, i, o, u) in the string, ignoring case.

    Input: A string s.

    Output: An integer representing the number of vowels in the string.

    Examples:

        Input: "hello"
        Output: 2 (e and o)

        Input: "Programming"
        Output: 3 (o, a, and i)

    Complexity:

        Time: O(n)
        Space: O(1)



Check If Prime Number

    Description: Given an integer n, determine if it is a prime number. A prime number is a number greater than 1 that has no divisors other than 1 and itself.

    Input: An integer n.

    Output: A boolean True if n is prime, False otherwise.

    Examples:

        Input: 5
        Output: True

        Input: 10
        Output: False

    Complexity:

        Time: O(sqrt(n))
        Space: O(1)

    Note: Think about how to reduce the total number of iterations and unnecessary calculations.



FizzBuzz

    Description: Write a program that prints the numbers from 1 to n. However, for multiples of 3, print "Fizz" instead of the number, and for the multiples of 5, print "Buzz". For numbers that are multiples of both 3 and 5, print "FizzBuzz".

    Input: An integer n (1 ≤ n ≤ 10,000).

    Output: A string where each character corresponds to either the number itself or one of "Fizz", "Buzz", or "FizzBuzz" based on the rules, concatenated together without space.

    Examples:

        Input: 3
        Output: "12Fizz"

        Input: 7
        Output: "12Fizz4BuzzFizz7" 

        Input: n = 17
        Output: "12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617"

    Complexity: 

        Time: O(n)
        Space: O(n)

    Note: Think and research about mutable and immutable strings, and try to find best approach



Sum of Digits

    Description: Given a positive integer n, return the sum of its digits.

    Input: An integer n.

    Output: An integer representing the sum of the digits of n.

    Examples:

        Input: 123
        Output: 6 (1 + 2 + 3)

        Input: 456
        Output: 15 (4 + 5 + 6)

    Complexity:

        Time: O(log(n))
        Space: O(1)

    Note: Try to find solution without converting n to the string



Check for Duplicates in Array

    Description: Given an array of integers, determine if there are any duplicates. Return True if any element appears more than once, otherwise return False.

    Input: An array arr of integers.

    Output: A boolean True or False.

    Examples:

        Input: [1, 2, 3, 4, 2]
        Output: True

        Input: [1, 2, 3, 4, 5]
        Output: False

    Complexity:

        Time: O(n)
        Space: O(n)



Merge Two Sorted Arrays

    Description: You are given two sorted arrays, arr1 and arr2, which may have different lengths. Write a function to merge these two arrays into one sorted array. The merged array should also be sorted in non-decreasing order.

    Input:

        arr1: A sorted list of integers.
        arr2: Another sorted list of integers.

    Output: A single list that merges arr1 and arr2 in sorted order.

    A single list that merges arr1 and arr2 in sorted order.

    Examples:

        Input: arr1 = [1, 3, 5] arr2 = [2, 4, 6, 7, 11]
        Output: [1, 2, 3, 4, 5, 6, 7, 11]

        Input: arr1 = [1, 2, 3, 8, 12] arr2 = [3, 4, 5, 7, 15]
        Output: [1, 2, 3, 3, 4, 5, 7, 8, 12, 15]

    Complexity:

        Time: O(m + n)
        Space: O(m + n)



Find the Maximum Product of Two Elements

    Description: Given an array of integers, find the maximum product of any two distinct elements in the array.

    Input: An array arr of integers.

    Output: An integer representing the maximum product of two elements in the array.

    Example:

        Input: [1, 5, 4, 5]
        Output: 25 (5 * 5)

        Input: [3, 7, 1, 9, 8]
        Output: 72 (9 * 8)

    Complexity:

        Time: O(n) 
        Space: O(1)



Find the Missing Number in a Sequence

    Description: Given an array of n unique integers where the numbers range from 1 to n+1, find the missing number in the sequence.

    Input: An array arr of integers.

    Output: The missing integer.

    Example:

        Input: [3, 7, 1, 2, 8, 4, 5]
        Output: 6 is missing (1, 2, 3, 4, 5, ?, 7, 8) 

        Input: [3, 7, 1, 2, 8, 4, 5, 6, 12, 9, 11]
        Output: 10

    Complexity: 

        Time: O(n)
        Space: O(1)
    


Reverse a String
    
    Description:  Given a string, return it in reverse order.

    Input: 

        s: A string

    Output: A reversed string.
    
    Examples:

        Input: "hello"
        Output: "olleh"

        Input: "1234 abc"
        Output: "cba 4321"

    Complexity:

        Time: O(n)
        Space: O(n) 



Count Frequencies of Characters in a String

    Description: Given a string, return a dictionary (hash map) where the keys are the characters in the string, and the values are the frequencies of those characters.

    Input:
    
        s: A string.

    Output: A dictionary where the keys are characters, and the values are their corresponding frequencies.
    
    Examples:

        Input: "hello"
        Output: {'h': 1, 'e': 1, 'l': 2, 'o': 1}

        Input: "aabbbc"
        Output: {'a': 2, 'b': 3, 'c': 1}


    Complexity: 

        Time: O(n)
        Space: O(n)